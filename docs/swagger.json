{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Money Guard API",
    "description": "This is a documentation of finance app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "servers": [
    {
      "url": "https://back-end-stackoverchill-793z.onrender.com"
    },
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "User",
      "description": "Get information about user"
    },
    {
      "name": "Categories",
      "description": "Categories and types of financial transactions"
    },
    {
      "name": "Transactions",
      "description": "Finance operations"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Auth"
        ],
        "operationId": "createUser",
        "description": "Create a new user.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Auth"
        ],
        "operationId": "logintUser",
        "description": "Login user.",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "tags": [
          "Auth"
        ],
        "operationId": "refreshUser",
        "description": "Refresh access token for user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200"
          },
          "401": {
            "$ref": "#/components/responses/401Token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout user",
        "tags": [
          "Auth"
        ],
        "operationId": "logoutUser",
        "description": "Logout user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "$ref": "#/components/responses/noContent"
          },
          "401": {
            "$ref": "#/components/responses/401Token"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get information about user",
        "tags": [
          "User"
        ],
        "operationId": "getUser",
        "description": "Get information about user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200user"
          },
          "401": {
            "$ref": "#/components/responses/401user"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/categories/{type}": {
      "get": {
        "summary": "Get information about categories and types of financial transactions",
        "tags": [
          "Categories"
        ],
        "operationId": "getCategories",
        "description": "Get information about categories and types of financial transactions.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "income"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200C"
          },
          "400": {
            "$ref": "#/components/responses/400C"
          },
          "401": {
            "$ref": "#/components/responses/401C"
          },
          "404": {
            "$ref": "#/components/responses/404C"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction by id",
        "operationId": "getTransaction",
        "description": "Get transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get transactionby id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found transaction with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          }
        }
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update transaction by id",
        "operationId": "patchTransaction",
        "description": "Update transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Type of transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "default": "expense"
                  },
                  "categoryId": {
                    "description": "Id of transaction category",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "date": {
                    "description": "Date of transaction",
                    "type": "string",
                    "example": "2025-05-17"
                  },
                  "amount": {
                    "description": "Transaction's amount",
                    "type": "number",
                    "example": 200
                  },
                  "comment": {
                    "description": "Transaction's comment",
                    "type": "string",
                    "example": "bought bread"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update transaction by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully patched a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          }
        }
      },
      "put": {
        "tags": [
          "Transactions"
        ],
        "summary": "Update or add transaction by id",
        "operationId": "putTransaction",
        "description": "Update or add transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Type of transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "default": "expense"
                  },
                  "categoryId": {
                    "description": "Id of transaction category",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "date": {
                    "description": "Date of transaction",
                    "type": "string",
                    "example": "2025-05-17"
                  },
                  "amount": {
                    "description": "Transaction's amount",
                    "type": "number",
                    "example": 200
                  },
                  "comment": {
                    "description": "Transaction's comment",
                    "type": "string",
                    "example": "bought bread"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update transaction by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Creates a transaction by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully update a transaction!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400Id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Delete transaction by id",
        "operationId": "deleteTransaction",
        "description": "Delete transaction by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Delete transaction by id. No content"
          },
          "400": {
            "$ref": "#/components/responses/400Id"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-2"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get list of transactions",
        "operationId": "getTransactions",
        "description": "Get list of transactions with this endpoint",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found transactions!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found transactions!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/transactions"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create transaction",
        "operationId": "createTransaction",
        "description": "Create a transaction with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "categoryId",
                  "date",
                  "amount"
                ],
                "properties": {
                  "type": {
                    "description": "Type of transaction",
                    "type": "string",
                    "enum": [
                      "income",
                      "expense"
                    ],
                    "default": "expense"
                  },
                  "categoryId": {
                    "description": "Id of transaction category",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "date": {
                    "description": "Date of transaction",
                    "type": "string",
                    "example": "2025-05-17"
                  },
                  "amount": {
                    "description": "Transaction's amount",
                    "type": "number",
                    "example": 200
                  },
                  "comment": {
                    "description": "Transaction's comment",
                    "type": "string",
                    "example": "bought bread"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a transaction!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/transactions"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegister": {
        "$ref": "#/components/schemas/userRegister"
      },
      "UserLogin": {
        "$ref": "#/components/schemas/userLogin"
      },
      "Tokens": {
        "$ref": "#/components/schemas/tokens"
      },
      "UserInformation": {
        "$ref": "#/components/schemas/userInformation"
      },
      "userRegister": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 2,
            "maxLength": 32,
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "johnDoe@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "example": "qweRTyui"
          }
        }
      },
      "userRegisterRespons": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 2,
            "maxLength": 32,
            "example": "John Doe"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "johnDoe@gmail.com"
          },
          "createdAt": {
            "description": "Data create",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-08T22:44:33.327Z"
          },
          "updatedAt": {
            "description": "Data update",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-16T19:32:54.566Z"
          }
        }
      },
      "userLogin": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "johnDoe@gmail.com"
          },
          "password": {
            "description": "User's password",
            "type": "string",
            "minLength": 8,
            "maxLength": 64,
            "example": "qweRTyui"
          }
        }
      },
      "tokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "userInformation": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "balance",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "User id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "User's name",
            "type": "string",
            "minLength": 2,
            "maxLength": 32,
            "example": "John Doe"
          },
          "balance": {
            "description": "Information about balance",
            "type": "number",
            "example": "0.00"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "example": "johnDoe@gmail.com"
          },
          "createdAt": {
            "description": "Data create",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-08T22:44:33.327Z"
          },
          "updatedAt": {
            "description": "Data update",
            "type": "string",
            "format": "date-time",
            "example": "2025-04-16T19:32:54.566Z"
          }
        }
      },
      "categoriesInformation": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "type"
        ],
        "properties": {
          "_id": {
            "description": "Category id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Category",
            "type": "string",
            "example": "Incomes"
          },
          "type": {
            "description": "Type category",
            "type": "string",
            "example": "income"
          }
        }
      },
      "transactions": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "type",
          "categoryId",
          "date",
          "amount"
        ],
        "properties": {
          "_id": {
            "description": "Transaction's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "userId": {
            "description": "Transaction's user id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "type": {
            "description": "Type of transaction",
            "type": "string",
            "enum": [
              "income",
              "expense"
            ],
            "default": "expense"
          },
          "categoryId": {
            "description": "Id of transaction category",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "date": {
            "description": "Date of transaction",
            "type": "string",
            "example": "2025-05-17"
          },
          "amount": {
            "description": "Transaction's amount",
            "type": "number",
            "example": 200
          },
          "comment": {
            "description": "Transaction's comment",
            "type": "string",
            "example": "bought bread"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful authentication",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully refreshed a session!"
                },
                "data": {
                  "$ref": "#/components/schemas/tokens"
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "User created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully registered a user!"
                },
                "data": {
                  "$ref": "#/components/schemas/userRegisterRespons"
                }
              }
            }
          }
        }
      },
      "400": {
        "description": "Invalid request body (schema validation error)",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "message",
                          "path",
                          "type",
                          "context"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"password\" length must be at least 8 characters long"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "paasword"
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "string.empty"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "integer",
                                "example": 8
                              },
                              "label": {
                                "type": "string",
                                "example": "password"
                              },
                              "value": {
                                "type": "string",
                                "example": ""
                              },
                              "key": {
                                "type": "string",
                                "example": "password"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Error in Email or Password",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "EmailAlreadyUse",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "Email already in use"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreatedUser": {
        "$ref": "#/components/responses/201"
      },
      "AuthSuccess": {
        "$ref": "#/components/responses/200"
      },
      "NoContent": {
        "$ref": "#/components/responses/noContent"
      },
      "InformationAboutUser": {
        "$ref": "#/components/responses/200user"
      },
      "401Token": {
        "description": "Invalid or expired token",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Invalid or expired token"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "noContent": {
        "description": "No content"
      },
      "200user": {
        "description": "Information about user",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Information about user"
                },
                "data": {
                  "$ref": "#/components/schemas/userInformation"
                }
              }
            }
          }
        }
      },
      "401user": {
        "description": "Authorization failed. Possible reasons:\n  - Missing Authorization header\n  - Invalid format (expected Bearer token)\n  - Session not found\n  - Access token expired\n",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "200C": {
        "description": "List of categories",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "List of categories for income"
                },
                "data": {
                  "$ref": "#/components/schemas/categoriesInformation"
                }
              }
            }
          }
        }
      },
      "400C": {
        "description": "BadRequestError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message",
                    "errors"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "message",
                          "path",
                          "type",
                          "context"
                        ],
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "\"type\" is required"
                          },
                          "path": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": [
                                "type"
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "example": "any.required"
                          },
                          "context": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "example": "type"
                              },
                              "key": {
                                "type": "string",
                                "example": "type"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401C": {
        "description": "UnauthorizedError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Session not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404C": {
        "description": "NotFoundError",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Information of categories for type not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400Id": {
        "description": "Not valid id error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "BadRequestError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "This id is not valid"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-2": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Transaction not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}